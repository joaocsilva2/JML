// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeSheet.Data;

namespace TimeSheet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200731170225_UpdateCliente3")]
    partial class UpdateCliente3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeSheet.Models.Alocacao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApontamentoLiberado")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("CargoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetoID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CargoID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("ProjetoID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Alocacoes");
                });

            modelBuilder.Entity("TimeSheet.Models.AlocacaoAgenda", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("ConsultorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<int?>("GerenteID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HoraFinal")
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan>("HoraInicial")
                        .HasColumnType("time(0)");

                    b.Property<int?>("ProjetoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ConsultorID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("GerenteID");

                    b.HasIndex("ProjetoID");

                    b.ToTable("AlocacaoAgendas");
                });

            modelBuilder.Entity("TimeSheet.Models.Apontamento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Atividades")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("HoraEntrada")
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan>("HoraIntervalo")
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan>("HoraReentrada")
                        .HasColumnType("time(0)");

                    b.Property<TimeSpan>("HoraSaida")
                        .HasColumnType("time(0)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoID")
                        .HasColumnType("int");

                    b.Property<int?>("TipoStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<bool>("Verificado")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("ProjetoID");

                    b.HasIndex("TipoStatusID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Apontamentos");
                });

            modelBuilder.Entity("TimeSheet.Models.Cargo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("TimeSheet.Models.Celula", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Celulas");
                });

            modelBuilder.Entity("TimeSheet.Models.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PessoaContato")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelefoneContato")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoLogradouro")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoPessoa")
                        .HasColumnType("char(1)");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TimeSheet.Models.Despesa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjetoID")
                        .HasColumnType("int");

                    b.Property<double>("TaxaCobrarCliente")
                        .HasColumnType("float");

                    b.Property<double>("TaxaReceberConsultor")
                        .HasColumnType("float");

                    b.Property<int?>("TipoDespesaID")
                        .HasColumnType("int");

                    b.Property<int?>("TipoStatusID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("ProjetoID");

                    b.HasIndex("TipoDespesaID");

                    b.HasIndex("TipoStatusID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Despesas");
                });

            modelBuilder.Entity("TimeSheet.Models.Empresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoLogradouro")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoPessoa")
                        .HasColumnType("char(1)");

                    b.HasKey("ID");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("TimeSheet.Models.Log", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Requisicao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("TimeSheet.Models.Projeto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AceitaDespesas")
                        .HasColumnType("bit");

                    b.Property<int>("Almoco")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Concluido")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataContratacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataEncerramento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataPrevisaoEncerramento")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<int>("Kilometragem")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Reembolsado")
                        .HasColumnType("bit");

                    b.Property<double>("TaxaCobrarCliente")
                        .HasColumnType("float");

                    b.Property<double>("TaxaReceberConsultor")
                        .HasColumnType("float");

                    b.Property<bool>("TimeMaterial")
                        .HasColumnType("bit");

                    b.Property<int>("TotalHoras")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("TimeSheet.Models.ProjetoCelula", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("CelulaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CelulaID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("ProjetoID");

                    b.ToTable("ProjetoCelulas");
                });

            modelBuilder.Entity("TimeSheet.Models.TipoDespesa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("TipoDespesas");
                });

            modelBuilder.Entity("TimeSheet.Models.TipoStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("TipoStatus");
                });

            modelBuilder.Entity("TimeSheet.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("CargoID")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailCooporativo")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmailPessoal")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rg")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneCelular")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelefoneResidencial")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoLogradouro")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("CargoID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TimeSheet.Models.UsuarioCelula", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int?>("CelulaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CelulaID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("UsuarioCelulas");
                });

            modelBuilder.Entity("TimeSheet.Models.Alocacao", b =>
                {
                    b.HasOne("TimeSheet.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoID");

                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("TimeSheet.Models.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoID");

                    b.HasOne("TimeSheet.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("TimeSheet.Models.AlocacaoAgenda", b =>
                {
                    b.HasOne("TimeSheet.Models.Usuario", "Consultor")
                        .WithMany()
                        .HasForeignKey("ConsultorID");

                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("TimeSheet.Models.Usuario", "Gerente")
                        .WithMany()
                        .HasForeignKey("GerenteID");

                    b.HasOne("TimeSheet.Models.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoID");
                });

            modelBuilder.Entity("TimeSheet.Models.Apontamento", b =>
                {
                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("TimeSheet.Models.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoID");

                    b.HasOne("TimeSheet.Models.TipoStatus", "TipoStatus")
                        .WithMany()
                        .HasForeignKey("TipoStatusID");

                    b.HasOne("TimeSheet.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("TimeSheet.Models.Cargo", b =>
                {
                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("TimeSheet.Models.Celula", b =>
                {
                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("TimeSheet.Models.Cliente", b =>
                {
                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("TimeSheet.Models.Despesa", b =>
                {
                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("TimeSheet.Models.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoID");

                    b.HasOne("TimeSheet.Models.TipoDespesa", "TipoDespesa")
                        .WithMany()
                        .HasForeignKey("TipoDespesaID");

                    b.HasOne("TimeSheet.Models.TipoStatus", "TipoStatus")
                        .WithMany()
                        .HasForeignKey("TipoStatusID");

                    b.HasOne("TimeSheet.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("TimeSheet.Models.Log", b =>
                {
                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("TimeSheet.Models.Projeto", b =>
                {
                    b.HasOne("TimeSheet.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("TimeSheet.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("TimeSheet.Models.ProjetoCelula", b =>
                {
                    b.HasOne("TimeSheet.Models.Celula", "Celula")
                        .WithMany()
                        .HasForeignKey("CelulaID");

                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("TimeSheet.Models.Projeto", "Projeto")
                        .WithMany()
                        .HasForeignKey("ProjetoID");
                });

            modelBuilder.Entity("TimeSheet.Models.TipoDespesa", b =>
                {
                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("TimeSheet.Models.TipoStatus", b =>
                {
                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("TimeSheet.Models.Usuario", b =>
                {
                    b.HasOne("TimeSheet.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoID");

                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("TimeSheet.Models.UsuarioCelula", b =>
                {
                    b.HasOne("TimeSheet.Models.Celula", "Celula")
                        .WithMany()
                        .HasForeignKey("CelulaID");

                    b.HasOne("TimeSheet.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("TimeSheet.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });
#pragma warning restore 612, 618
        }
    }
}
